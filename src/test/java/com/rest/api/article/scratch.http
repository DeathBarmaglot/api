### Successful test: Add new user
POST http://localhost:8080/api/v1/users
Content-Type: application/json

{
  "username": "Vasya",
  "email": "doe@i.ua",
  "password": "123"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}


### Successful test: Add new post
POST http://localhost:8080/api/v1/posts
Content-Type: application/json

{
  "title": "News",
  "content": "Bad"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Add new comment
POST http://localhost:8080/api/v1/posts/1/comments
Content-Type: application/json

{
  "text": "Request executed successfully"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Add new comment
POST http://localhost:8080/api/v1/posts/1/comments
Content-Type: application/json

{
  "text": "Request executed successfully"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Add top post
PUT http://localhost:8080/api/v1/posts/1/star
Content-Type: application/json

{
  "title": "Good News everyone",
  "content": "task #1 is done"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Get top posts
GET http://localhost:8080/api/v1/posts/star
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Remove top post
DELETE http://localhost:8080/api/v1/posts/1/star
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Get all sorted posts by title & check response status is 200
GET http://localhost:8080/api/v1/posts?sort=title
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Get all posts & check response status is 200
GET http://localhost:8080/api/v1/posts
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is 200");
});
%}

### Failed test: check response status is 200
GET http://localhost:8080/api/v1/

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 200");
});
%}

### Check response status and content-type
GET http://localhost:8080/api/v1/posts

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### GET request with a header
GET http://localhost:8080/api/v1/posts
Accept: application/json


### GET request with dynamic variables
GET http://localhost:8080/api/v1/posts?sort=title
Accept: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Send POST request with json body
POST http://localhost:8080/api/v1/posts
Content-Type: application/json

{
  "title": "Bad",
  "content": "News"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is 201");
});
%}

###
PUT http://localhost:8080/api/v1/posts/10
Content-Type: application/json

{
  "title": "Good News",
  "content": "Everyone"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is 200");
});
%}

###
DELETE http://localhost:8080/api/v1/posts/6

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is 200");
});
%}

###
GET http://localhost:8080/api/v1/posts
Content-Type: application/json

### Successful test: Get post 20
GET http://localhost:8080/api/v1/posts/5
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Get comments by post 5
GET http://localhost:8080/api/v1/posts/5/comments
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Get post 20 with comment 30
GET http://localhost:8080/api/v1/posts/5/comments/12
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Add new comment
POST http://localhost:8080/api/v1/posts/5/comments
Content-Type: application/json

{
  "text": "Request executed successfully"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Successful test: Get post 1 with all comments
GET http://localhost:8080/api/v1/posts/5/full
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### GET request with dynamic variables
GET http://localhost:8080/api/v1/posts?title=News
Accept: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}